{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/GoogleMapController.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","LocationInfo","markers","infoWindow","google","maps","InfoWindow","mapOption","gestureHandling","zoom","initMarkers","map","setMap","bounds","LatLngBounds","document","querySelector","querySelectorAll","forEach","item","index","location","order","lat","Number","getAttribute","lng","title","getElementsByTagName","innerHTML","address","getElementsByClassName","phone","marker","Marker","icon","position","LatLng","extend","push","showInfoMarkerOnMap","addEventListener","event","trigger","fitBounds","addListener","setContent","open","panTo","getPosition","setZoom","close","filterFunction","cityValue","countryValue","isHideAll","selectName","option","value","hidden","city","console","log","disctrict","showLocation","isHiddenAll","addressValue","element","classList","add","includes","remove","debounce","func","waitFor","timeout","args","_i","arguments","clearTimeout","setTimeout","apply","initialize","map_1","listener_1","Map","target","getZoom","removeListener","__awaiter","addDomListener","window"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,gB,y5CCYA,SAAAK,KATA,IAAIC,EAAgC,GAChCC,EAAqC,IAAIC,OAAOC,KAAKC,WAGrDC,EAAY,CACfC,gBAAiB,cACjBC,KAAM,IAGMb,EAAAK,aAAAA,EASO,SAAdS,EAAeC,GACpB,GAAqB,EAAjBT,EAAQJ,OACX,IAAK,IAAIX,EAAI,EAAGA,EAAIe,EAAQJ,OAAQX,IACnCe,EAAQf,GAAGyB,OAAO,MAGpBV,EAAU,GACV,IAAMW,EAAS,IAAIT,OAAOC,KAAKS,aAC3BC,SAASC,cAAc,uBAE1BD,SAASE,iBAAiB,sCAAsCC,QAAQ,SAACC,EAAMC,GAC9E,IAAIC,EAAyB,CAC5BC,MAAOF,EACPG,IAAKC,OAAOL,EAAKM,aAAa,aAC9BC,IAAKF,OAAOL,EAAKM,aAAa,aAC9BE,MAAOR,EAAKS,qBAAqB,MAAM,GAAGC,UAC1CC,QAASX,EAAKY,uBAAuB,YAAY,GAAGF,UACpDG,MAAOb,EAAKY,uBAAuB,SAAS,GAAGF,WAE5CI,EAAS,IAAI7B,OAAOC,KAAK6B,OAAO,CACnCvB,IAAKA,EACLwB,KAAM,GACNR,MAAOR,EAAKS,qBAAqB,MAAM,GAAGC,UAC1CO,SAAU,IAAIhC,OAAOC,KAAKgC,OACtBb,OAAOL,EAAKM,aAAa,aACvBD,OAAOL,EAAKM,aAAa,gBAEhCZ,EAAOyB,OAAOL,EAAOG,UACrBlC,EAAQqC,KAAKN,GACbO,EAAoB7B,EAAKR,EAAY8B,EAAQZ,GAE7CF,EAAKsB,iBAAiB,QAAS,WAC9BrC,OAAOC,KAAKqC,MAAMC,QAAQzC,EAAQkB,GAAQ,aAK7CT,EAAIiC,UAAU/B,GArCf,IAwCM2B,EAAsB,SAAC7B,EAAsBR,EAAoC8B,EAA4BZ,GAClHjB,OAAOC,KAAKqC,MAAMG,YAAYZ,EAAQ,QAAS,WAC9C9B,EAAW2C,WAAW,kDAEdzB,EAASM,MAAK,qBACfN,EAASS,QAAO,oBAChBT,EAASW,MAAK,4BAGrB7B,EAAW4C,KAAKpC,EAAKsB,GACrBtB,EAAIqC,MAAMf,EAAOgB,eACjBtC,EAAIuC,QAAQ,MAGb9C,OAAOC,KAAKqC,MAAMG,YAAYlC,EAAK,QAAS,WAC3CR,EAAWgD,WAuBPC,EAAiB,SAACzC,EAAsBQ,GAC7C,IAiFMkC,EASCC,EAQAC,EAlGDC,EAAarC,EAAKM,aAAa,QAElB,YAAf+B,GAEHJ,EAAezC,EAAKI,SAASC,cAC5B,4CAIiB,YAAfwC,GACHzC,SACEE,iBACA,+CAEAC,QAAQ,SAACuC,GAERA,EAAOhC,aAAa,iBACAN,EAAMuC,MAGzBD,EACEE,QAAS,EAEyB,KAAjBF,EAAQC,QAI3BD,EACEE,QAAS,EAEX5C,SAASC,cACR,wCAEC0C,MAAQ,OAKdN,EAAezC,EAAKI,SAASC,cAC5B,0CAIsB,SAAfwC,GACRzC,SACEE,iBACA,mDAEAC,QAAQ,SAACuC,GAERA,EAAOhC,aAAa,cACAN,EAAMuC,MAGzBD,EACEE,QAAS,EAEyB,KAAjBF,EAAQC,QAI3BD,EACEE,QAAS,EAEX5C,SAASC,cACR,4CAEC0C,MAAQ,OAKdN,EAAezC,EAAKI,SAASC,cAC5B,+CAO8C,GAA3CQ,OAA2BL,EAAMuC,OASnB,IARbL,EAAY7B,OAEdT,SAASC,cACR,wCAEC0C,SAICJ,EAAe9B,OAEjBT,SAASC,cACR,2CAEC0C,OAGAH,GAAY,EAChBxC,SAASE,iBACR,6DAA+DqC,EAAe,MAC3EpC,QAAQ,SAAA0C,GACTC,QAAQC,IAAIP,GACZxC,SAASE,iBACR,8DAAoF2C,EAAMF,MAAQ,MAC/FxC,QAAQ,SAAC6C,EAAW3C,GACrByC,QAAQC,IAAIC,GACZC,EAAiCD,EAAWL,MAAOH,GACnDA,EAAYA,GAAaA,EAAYA,OAI3CxC,SAASE,iBACR,8DAAgEoC,EAAY,MACzEnC,QAAQ,SAAC6C,EAAW3C,GACrB4C,EAAiCD,EAAWL,MAAgB,GAATtC,KAIvD4C,EAAiC7C,EAAMuC,OAAO,GAG/ChD,EAAYC,KAKRqD,EAAe,SAACN,EAAeO,GACpC,IAAMC,EAAkCnD,SAASC,cAAc,0CAA2C0C,MAC1GG,QAAQC,IAAIG,EAAaC,GACzBnD,SACEE,iBAAiB,yBACjBC,QAAQ,SAAAiD,GACJF,GACHE,EAAQC,UAAUC,IAAI,UAEnBF,EAAQ1C,aAAa,kBAAoBiC,GACxB,IAAhBQ,IAICC,EAAQnD,cAAc,aAAaa,UAAUyC,SAASJ,IAH1DC,EAAQC,UAAUG,OAAO,aAWjB3E,EAAA4E,SAAW,SACvBC,EACAC,GAEA,IAAIC,EAAgD,KAUpD,OARkB,W,IAAC,IAAAC,EAAA,GAAAC,EAAA,EAAAA,EAAAC,UAAAhF,OAAA+E,IAAAD,EAAAC,GAAAC,UAAAD,GACF,OAAZF,IACHI,aAAaJ,GACbA,EAAU,MAEXA,EAAUK,WAAW,WAAM,OAAAP,EAAIQ,WAAA,EAAJL,IAAeF,KAMzB,SAAbQ,IAEL,IACKC,EAaAC,EA1MkBzE,EA4LnBI,SAASC,cAAc,UACtBmE,EAAuB,IAAI/E,OAAOC,KAAKgF,IAAItE,SAASC,cAAc,QAAST,GAE3EQ,SAASC,cAAc,uBA/LLL,EAgMNwE,EA/LjBpE,SACEE,iBAAiB,2BACjBC,QAAQ,SAACC,EAAMC,GACfD,EAAKsB,iBAAiB,SAAU,SAAC0B,GAChCf,EAAezC,EAAKQ,OAGvBJ,SACEC,cAAc,0CACdyB,iBACA,QACA7C,EAAA4E,SAAS,SAAU9B,GAClBU,EAAezC,EAAK+B,EAAM4C,SACxB,MAoLHlC,EAAe+B,EAAKpE,SAASC,cAC5B,6CAKDN,EAAYyE,GAETC,EAAWhF,OAAOC,KAAKqC,MAAMG,YAAYsC,EAAK,OAAQ,WACrC,GAAhBA,EAAII,WACPJ,EAAIjC,QAAQ,IAEb9C,OAAOC,KAAKqC,MAAM8C,eAAeJ,MAMpCrE,SAAS0B,iBAAiB,mBAAoB,WAAA,OAAAgD,OAAA,OAAA,OAAA,EAAA,W,iCAC7CrF,OAAOC,KAAKqC,MAAMgD,eAAeC,OAAQ,OAAQT,G","file":"GoogleMapController.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import {} from \"googlemaps\";\r\ndeclare var google:any;\r\n//let map: google.maps.Map;\r\nlet markers: google.maps.Marker[] = [];\r\nlet infoWindow: google.maps.InfoWindow = new google.maps.InfoWindow();\r\ndeclare var google: any;\r\n\r\nlet mapOption = {\r\n\tgestureHandling: \"cooperative\",\r\n\tzoom: 12,\r\n};\r\n\r\nexport class LocationInfo {\r\n\torder: number; // Thứ tự nằm trong mảng ở mảng html\r\n\tlat: number;\r\n\tlng: number;\r\n\ttitle: string;\r\n\taddress: string;\r\n\tphone: string;\r\n}\r\n\r\nconst initMarkers = (map: google.maps.Map) => {\r\n\tif (markers.length > 0) {\r\n\t\tfor (let i = 0; i < markers.length; i++) {\r\n\t\t\tmarkers[i].setMap(null);\r\n\t\t}\r\n\t}\r\n\tmarkers = [];\r\n\tconst bounds = new google.maps.LatLngBounds();\r\n\tif (document.querySelector(\".introMap__list ul\")) {\r\n\t\t// Get location information in html\r\n\t\tdocument.querySelectorAll(\".introMap__list ul li:not(.d-none)\").forEach((item, index) => {\r\n\t\t\tlet location: LocationInfo = {\r\n\t\t\t\torder: index,\r\n\t\t\t\tlat: Number(item.getAttribute(\"data-lat\")),\r\n\t\t\t\tlng: Number(item.getAttribute(\"data-lng\")),\r\n\t\t\t\ttitle: item.getElementsByTagName(\"h6\")[0].innerHTML,\r\n\t\t\t\taddress: item.getElementsByClassName(\"location\")[0].innerHTML,\r\n\t\t\t\tphone: item.getElementsByClassName(\"phone\")[0].innerHTML,\r\n\t\t\t};\r\n\t\t\tlet marker = new google.maps.Marker({\r\n\t\t\t\tmap: map,\r\n\t\t\t\ticon: \"\",\r\n\t\t\t\ttitle: item.getElementsByTagName(\"h6\")[0].innerHTML,\r\n\t\t\t\tposition: new google.maps.LatLng(\r\n\t\t\t\t\t\t\t\tNumber(item.getAttribute(\"data-lat\")),\r\n\t\t\t\t\t\t\t\t\t\tNumber(item.getAttribute(\"data-lng\"))),\r\n\t\t\t});\r\n\t\t\tbounds.extend(marker.position);\r\n\t\t\tmarkers.push(marker);\r\n\t\t\tshowInfoMarkerOnMap(map, infoWindow, marker, location);\r\n\r\n\t\t\titem.addEventListener(\"click\", () => {\r\n\t\t\t\tgoogle.maps.event.trigger(markers[index], \"click\");\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\tmap.fitBounds(bounds);\r\n};\r\n\r\nconst showInfoMarkerOnMap = (map: google.maps.Map, infoWindow: google.maps.InfoWindow, marker: google.maps.Marker, location: LocationInfo) => {\r\n\tgoogle.maps.event.addListener(marker, \"click\", function () {\r\n\t\tinfoWindow.setContent(`\r\n\t\t\t<div class='map-markers'>\r\n\t\t\t\t<h3>${location.title}</h3>\r\n\t\t\t\t<p>${location.address}</p>\r\n\t\t\t\t<p>${location.phone}</p>\r\n\t\t\t</div>\r\n\t\t`);\r\n\t\tinfoWindow.open(map, marker);\r\n\t\tmap.panTo(marker.getPosition());\r\n\t\tmap.setZoom(12);\r\n\t});\r\n\r\n\tgoogle.maps.event.addListener(map, \"click\", function () {\r\n\t\tinfoWindow.close();\r\n\t});\r\n};\r\n\r\nconst addFilterEvent = (map: google.maps.Map) => {\r\n\tdocument\r\n\t\t.querySelectorAll(\".introMap__input select\")\r\n\t\t.forEach((item, index) => {\r\n\t\t\titem.addEventListener(\"change\", (element) => {\r\n\t\t\t\tfilterFunction(map, item)\r\n\t\t\t});\r\n\t\t});\r\n\tdocument\r\n\t\t.querySelector(\".introMap__input input[name='address']\")\r\n\t\t.addEventListener(\r\n\t\t\t\"keyup\",\r\n\t\t\tdebounce(function (event) {\r\n\t\t\t\tfilterFunction(map, event.target)\r\n\t\t\t}, 2000),\r\n\t\t);\r\n\r\n}\r\n\r\nconst filterFunction = (map: google.maps.Map, item: any) => {\r\n\tconst selectName = item.getAttribute(\"name\");\r\n\t// Address filter\r\n\tif (selectName === \"address\") {\r\n\t\t// Trigger Country Select Box\r\n\t\tfilterFunction(map, document.querySelector(\r\n\t\t\t\".introMap__input select[name='country']\",\r\n\t\t));\r\n\t}\r\n\t// Country Select Box\r\n\tif (selectName === \"country\") {\r\n\t\tdocument\r\n\t\t\t.querySelectorAll(\r\n\t\t\t\t\".introMap__input select[name='city'] option\",\r\n\t\t\t)\r\n\t\t\t.forEach((option) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\toption.getAttribute(\"data-country\") ==\r\n\t\t\t\t\t(<HTMLSelectElement>item).value\r\n\t\t\t\t) {\r\n\t\t\t\t\t(<HTMLOptionElement>(\r\n\t\t\t\t\t\toption\r\n\t\t\t\t\t)).hidden = false;\r\n\t\t\t\t} else if (\r\n\t\t\t\t\t(<HTMLOptionElement>option).value == \"0\"\r\n\t\t\t\t) {\r\n\t\t\t\t} else {\r\n\t\t\t\t\t(<HTMLOptionElement>(\r\n\t\t\t\t\t\toption\r\n\t\t\t\t\t)).hidden = true;\r\n\t\t\t\t\t(<HTMLSelectElement>(\r\n\t\t\t\t\t\tdocument.querySelector(\r\n\t\t\t\t\t\t\t\".introMap__input select[name='city']\",\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)).value = \"0\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t// Trigger City Select Box\r\n\t\tfilterFunction(map, document.querySelector(\r\n\t\t\t\".introMap__input select[name='city']\",\r\n\t\t));\r\n\t}\r\n\t// City Select Box\r\n\telse if (selectName === \"city\") {\r\n\t\tdocument\r\n\t\t\t.querySelectorAll(\r\n\t\t\t\t\".introMap__input select[name='district'] option\",\r\n\t\t\t)\r\n\t\t\t.forEach((option) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\toption.getAttribute(\"data-city\") ==\r\n\t\t\t\t\t(<HTMLSelectElement>item).value\r\n\t\t\t\t) {\r\n\t\t\t\t\t(<HTMLOptionElement>(\r\n\t\t\t\t\t\toption\r\n\t\t\t\t\t)).hidden = false;\r\n\t\t\t\t} else if (\r\n\t\t\t\t\t(<HTMLOptionElement>option).value == \"0\"\r\n\t\t\t\t) {\r\n\t\t\t\t} else {\r\n\t\t\t\t\t(<HTMLOptionElement>(\r\n\t\t\t\t\t\toption\r\n\t\t\t\t\t)).hidden = true;\r\n\t\t\t\t\t(<HTMLSelectElement>(\r\n\t\t\t\t\t\tdocument.querySelector(\r\n\t\t\t\t\t\t\t\".introMap__input select[name='district']\",\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)).value = \"0\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t// Trigger Disctrict Select Box\r\n\t\tfilterFunction(map, document.querySelector(\r\n\t\t\t\".introMap__input select[name='district']\",\r\n\t\t));\r\n\t}\r\n\t// District Select Box\r\n\telse\r\n\t{\r\n\t\t// District Selected is default\r\n\t\tif (Number((<HTMLSelectElement>item).value) == 0) {\r\n\t\t\tvar cityValue = Number(\r\n\t\t\t\t(<HTMLSelectElement>(\r\n\t\t\t\t\tdocument.querySelector(\r\n\t\t\t\t\t\t\".introMap__input select[name='city']\",\r\n\t\t\t\t\t)\r\n\t\t\t\t)).value\r\n\t\t\t);\r\n\t\t\t// City Selected is default\r\n\t\t\tif (cityValue == 0) {\r\n\t\t\t\tvar countryValue = Number(\r\n\t\t\t\t\t(<HTMLSelectElement>(\r\n\t\t\t\t\t\tdocument.querySelector(\r\n\t\t\t\t\t\t\t\".introMap__input select[name='country']\",\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)).value\r\n\t\t\t\t);\r\n\t\t\t\t\r\n\t\t\t\tvar isHideAll = true;\r\n\t\t\t\tdocument.querySelectorAll(\r\n\t\t\t\t\t\".introMap__input select[name='city'] option[data-country='\" + countryValue + \"']\"\r\n\t\t\t\t\t\t).forEach(city => {\r\n\t\t\t\t\t\t\tconsole.log(isHideAll)\r\n\t\t\t\t\t\t\tdocument.querySelectorAll(\r\n\t\t\t\t\t\t\t\t\".introMap__input select[name='district'] option[data-city='\" + (<HTMLOptionElement>city).value + \"']\"\r\n\t\t\t\t\t\t\t\t\t).forEach((disctrict, index) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(disctrict)\r\n\t\t\t\t\t\t\t\t\t\tshowLocation((<HTMLOptionElement>disctrict).value, isHideAll)\r\n\t\t\t\t\t\t\t\t\t\tisHideAll = isHideAll ? !isHideAll : isHideAll;\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tdocument.querySelectorAll(\r\n\t\t\t\t\t\".introMap__input select[name='district'] option[data-city='\" + cityValue + \"']\"\r\n\t\t\t\t\t\t).forEach((disctrict, index) => {\r\n\t\t\t\t\t\t\tshowLocation((<HTMLOptionElement>disctrict).value, index == 0)\r\n\t\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tshowLocation((<HTMLSelectElement>item).value, true)\r\n\t\t}\r\n\t\t\r\n\t\tinitMarkers(map);\r\n\t}\r\n\r\n}\r\n\r\nconst showLocation = (value: string, isHiddenAll: boolean) => {\r\n\tconst addressValue = (<HTMLInputElement>document.querySelector(\".introMap__input input[name='address']\")).value;\r\n\tconsole.log(isHiddenAll, addressValue)\r\n\tdocument\r\n\t\t.querySelectorAll(\".introMap__list ul li\")\r\n\t\t.forEach(element => {\r\n\t\t\tif (isHiddenAll) {\r\n\t\t\t\telement.classList.add(\"d-none\");\r\n\t\t\t}\r\n\t\t\tif (element.getAttribute(\"data-district\") == value) {\r\n\t\t\t\tif (addressValue == \"\") {\r\n\t\t\t\t\telement.classList.remove(\"d-none\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (element.querySelector(\".location\").innerHTML.includes(addressValue)) {\r\n\t\t\t\t\t\telement.classList.remove(\"d-none\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n}\r\n\r\nexport const debounce = <F extends (...args: any[]) => any>(\r\n\tfunc: F,\r\n\twaitFor: number,\r\n) => {\r\n\tlet timeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\n\tconst debounced = (...args: Parameters<F>) => {\r\n\t\tif (timeout !== null) {\r\n\t\t\tclearTimeout(timeout);\r\n\t\t\ttimeout = null;\r\n\t\t}\r\n\t\ttimeout = setTimeout(() => func(...args), waitFor);\r\n\t};\r\n\r\n\treturn debounced as (...args: Parameters<F>) => ReturnType<F>;\r\n};\r\n\r\nconst initialize = () => {\r\n\t// Html must have #map\r\n\tif (document.querySelector(\"#map\")) {\r\n\t\tlet map: google.maps.Map = new google.maps.Map(document.querySelector(\"#map\"), mapOption);\r\n\t\t// Location markers have filter box\r\n\t\tif (document.querySelector(\".introMap__list ul\")) {\r\n\t\t\taddFilterEvent(map);\r\n\t\t\t// Trigger filter event\r\n\t\t\tfilterFunction(map, document.querySelector(\r\n\t\t\t\t\".introMap__input select[name='country']\",\r\n\t\t\t));\r\n\t\t} \r\n\t\telse\r\n\t\t{\r\n\t\t\tinitMarkers(map);\r\n\t\t}\r\n\t\tlet listener = google.maps.event.addListener(map, \"idle\", () => {\r\n\t\t\tif (map.getZoom() > 12) {\r\n\t\t\t\tmap.setZoom(12);\r\n\t\t\t}\r\n\t\t\tgoogle.maps.event.removeListener(listener);\r\n\t\t});\r\n\t\t// google.maps.event.addListener(map, \"bounds_changed\", getLocationList);\r\n\t}\r\n};\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\r\n\tgoogle.maps.event.addDomListener(window, \"load\", initialize);\r\n});\r\n"]}